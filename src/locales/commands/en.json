{
  "command.handler": {
    "errors.only_for_party_members": "This command is only available for members of my party.",
    "errors.only_for_private_messages": "This command is only available in private messages.",
    "errors.need_party_leader": "I need to be the party leader to execute this command!",
    "errors.only_for_owners": "This command is only available for bot owners.",
    "errors.only_for_admins": "This command is only available for bot administrators.",
    "errors.only_for_whitelist": "This command is only available for users on the whitelist of the bot."
  },
  "command.config.all_items": {
    "description": "Shows the latest cosmetics added to the game, an optional filter can be added and you can stop with the \"stop\" command.",
    "usage.filter.options.outfits": "Outfits",
    "usage.filter.options.backpacks": "Backpacks",
    "usage.filter.options.emojis": "Emojis",
    "usage.filter.options.emotes": "Emotes",
    "usage.filter.options.pickaxes": "Pickaxes",
    "usage.filter.description": "The filter to be set by showing the items."
  },
  "command.run.all_items": {
    "msg.no_items": "Unable to fetch the items.",
    "msg.items_already_displaying": "Cosmetics are already being displayed, it must first be stopped with the \"stop\" command.",
    "msg.setting_items": "Setting all game items... {filtered}",
    "msg.filtered_by": "(filtered by {filter})",
    "msg.items_showed": "I have finished showing all the items..."
  },
  "command.config.backpack": {
    "description": "Sets the bot's backpack.",
    "usage.query.name": "Backpack name or ID",
    "usage.query.description": "The name or ID of the backpack to be set."
  },
  "command.run.backpack": {
    "msg.backpack_not_found": "Backpack {item} not found!",
    "msg.backpack_changed": "Set the backpack to {name}! ({id})"
  },
  "command.config.backpack_variants": {
    "description": "Sets the backpack's variants."
  },
  "command.run.backpack_variants": {
    "msg.backpack_not_found": "The bot does not have a backpack!",
    "msg.invalid_backpack": "Invalid backpack!",
    "msg.variants_not_founded": "This backpack does not have variants!",
    "msg.variants_select": "Send the variant you want to select for {type}",
    "msg.variants_changed": "Set the backpack variants!"
  },
  "command.config.banner": {
    "description": "Sets the bot's banner.",
    "usage.query.name": "Banner name or ID",
    "usage.query.description": "The name or ID of the banner to set."
  },
  "command.run.banner": {
    "msg.banner_not_found": "Banner {item} not found!",
    "msg.banner_changed": "Set the banner to {name}! ({id})"
  },
  "command.config.clear_backpack": {
    "description": "Removes the backpack of the bot."
  },
  "command.run.clear_backpack": {
    "msg.backpack_cleared": "Cleared backpack!"
  },
  "command.config.clear_emote": {
    "description": "Stops the bot's dance."
  },
  "command.run.clear_emote": {
    "msg.emote_cleared": "Cleared emote!"
  },
  "command.config.copy": {
    "description": "Copy the cosmetics of a user or copy the cosmetics to you if not specify arguments.",
    "usage.filter.options.all": "All",
    "usage.filter.options.outfit": "Outfit",
    "usage.filter.options.backpack": "Backpack",
    "usage.filter.options.emoji": "Emoji",
    "usage.filter.options.emote": "Emote",
    "usage.filter.options.pickaxe": "Pickaxe",
    "usage.filter.description": "The filter to set when copying cosmetics.",
    "usage.query.name": "Member name or ID",
    "usage.query.description": "The member's name or ID to copy the cosmetics."
  },
  "command.run.copy": {
    "msg.members_found": "Found multiple members:",
    "msg.member_not_found": "Member {member} not found!",
    "msg.member_not_at_party": "You are not a member of my party.",
    "msg.member_copied": "Copied {member}!"
  },
  "command.config.cosmetic": {
    "description": "Sets the bot's cosmetic.",
    "usage.query.name": "Cosmetic name or ID",
    "usage.query.description": "The name or ID of the cosmetic to set."
  },
  "command.run.cosmetic": {
    "msg.cosmetic_not_found": "Cosmetic {query} not found!",
    "msg.cosmetic_changed": "Set the {type} to {name}! ({id})"
  },
  "command.config.emoji": {
    "description": "Sets the bot's emoji.",
    "usage.query.name": "Emoji name or ID",
    "usage.query.description": "The name or ID of the emoji to set."
  },
  "command.run.emoji": {
    "msg.emoji_not_found": "Emoji {query} not found!",
    "msg.emoji_changed": "Set the emoji to {name}! ({id})"
  },
  "command.config.emote": {
    "description": "Sets the bot's emote.",
    "usage.query.name": "Emote name or ID",
    "usage.query.description": "The name or ID of the emote to set."
  },
  "command.run.emote": {
    "msg.emote_not_found": "Emote {query} not found!",
    "msg.emote_changed": "Set the emote emoji to {name}! ({id})"
  },
  "command.config.mimic": {
    "description": "Does the same as a user or the same as you if not specify arguments. Use \"stop\" to stop the command.",
    "usage.filter.options.all": "All",
    "usage.filter.options.changes": "Changes",
    "usage.filter.options.outfits": "Outfits",
    "usage.filter.options.backpacks": "Backpacks",
    "usage.filter.options.emojis": "Emojis",
    "usage.filter.options.emotes": "Emotes",
    "usage.filter.options.pickaxes": "Pickaxes",
    "usage.filter.description": "The filter to set when imitating cosmetics.",
    "usage.query.name": "Member name or ID",
    "usage.query.description": "The member's name or ID to imitate cosmetics."
  },
  "command.run.mimic": {
    "msg.members_found": "Found multiple members:",
    "msg.member_not_found": "Member {query} not found!",
    "msg.member_not_at_party": "You are not a member of my party.",
    "msg.mimic_enabled": "Enabled mimic for {member}{filter}!",
    "msg.filter": " with filter {filter}"
  },
  "command.config.new_items": {
    "description": "Shows the latest cosmetics added to the game, an optional filter can be added and you can stop with the \"stop\" command.",
    "usage.filter.options.outfits": "Outfits",
    "usage.filter.options.backpacks": "Backpacks",
    "usage.filter.options.emojis": "Emojis",
    "usage.filter.options.emotes": "Emotes",
    "usage.filter.options.pickaxes": "Pickaxes",
    "usage.filter.description": "The filter to be set by showing the items."
  },
  "command.run.new_items": {
    "msg.type_error": "If you want an filter, make sure is valid, only outfits, backpacks, emojis, emotes or pickaxes",
    "msg.cosmetic_fetch_error": "Unable to fetch recently added cosmetics.",
    "msg.already_showing": "Cosmetics are already being displayed, it must first be stopped with the \"stop\" command.",
    "msg.showing_cosmetics": "Setting all the recently added items... {filter}",
    "msg.filter": "(filtered by {filter})",
    "msg.ended": "Finished showing all recently added items..."
  },
  "command.config.outfit": {
    "description": "Sets the bot's outfit.",
    "usage.query.name": "Outfit name or ID",
    "usage.query.description": "The name or ID of the outfit to be set."
  },
  "command.run.outfit": {
    "msg.outfit_not_found": "Outfit {query} not found!",
    "msg.outfit_changed": "Set the outfit to {name}! ({id})!"
  },
  "command.config.outfit_variants": {
    "description": "Sets the outfit's variants."
  },
  "command.run.outfit_variants": {
    "msg.outfit_not_found": "The bot does not have an outfit!",
    "msg.invalid_outfit": "Invalid outfit!",
    "msg.variants_not_found": "This outfit does not have variants!",
    "msg.variants_select": "Send the variant you want to select for {type}",
    "msg.changed": "Set the outfit variants!"
  },
  "command.config.perfect_timing": {
    "description": "Sets the bot's cosmetics synchronized.",
    "usage.query.name": "Cosmetic name or ID",
    "usage.query.description": "The name or ID of the cosmetic to set."
  },
  "command.run.perfect_timing": {
    "msg.cosmetic_not_found": "Cosmetic {query} not found!",
    "msg.perfect_timing_success": "Synchronizing to perform a perfect timing...",
    "msg.perfect_timing_done": "Synchronized the {value} to {name}! ({id})"
  },
  "command.config.pickaxe": {
    "description": "Sets the bot's pickaxe.",
    "usage.query.name": "Pickaxe name or ID",
    "usage.query.description": "The name or ID of the pickaxe to be set."
  },
  "command.run.pickaxe": {
    "msg.pickaxe_not_found": "Pickaxe {query} not found!",
    "msg.pickaxe_changed": "Set the pickaxe to {name}! ({id})"
  },
  "command.config.pickaxe_variants": {
    "description": "Sets pickaxe's variants."
  },
  "command.run.pickaxe_variants": {
    "msg.pickaxe_not_found": "The bot does not have a pickaxe!",
    "msg.invalid_pickaxe": "Invalid pickaxe!",
    "msg.variants_not_found": "This pickaxe does not have variants!",
    "msg.variants_select": "Send the variant you want to select for {type}",
    "msg.changed": "Set the pickaxe variants!"
  },
  "command.config.shop_items": {
    "description": "Shows the latest cosmetics added to the game, an optional filter can be added and you can stop with the \"stop\" command.",
    "usage.filter.options.outfits": "Outfits",
    "usage.filter.options.backpacks": "Backpacks",
    "usage.filter.options.emojis": "Emojis",
    "usage.filter.options.emotes": "Emotes",
    "usage.filter.options.pickaxes": "Pickaxes",
    "usage.filter.description": "The filter to be set by showing the items."
  },
  "command.run.shop_items": {
    "msg.invalid_type": "If you want an filter, make sure is valid, only outfits, backpacks, emojis, emotes or pickaxes",
    "msg.fetch_failed": "Unable to fetch the shop items.",
    "msg.already_displaying": "Cosmetics are already being displayed, it must first be stopped with the \"stop\" command.",
    "msg.showing_items": "Setting all the items in the shop... {filter}",
    "msg.filter": "(filtered by {query})",
    "msg.ended": "I have finished showing all the items in the store..."
  },
  "command.config.stop": {
    "description": "Stops pending operations."
  },
  "command.run.stop": {
    "msg.stopped_items": "Stopped showing items!",
    "msg.stopped_mimic": "Stopped mimic!",
    "msg.stopped_emote": "Stopped emote!",
    "msg.nothing_to_stop": "Nothing to stop!"
  },
  "command.config.accept_friend": {
    "description": "Accept a friend request.",
    "usage.query.name": "Pending friend's name or ID",
    "usage.query.description": "The name or ID of the friend pending to accept."
  },
  "command.run.accept_friend": {
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.friends_not_found": "Friend {query} not found!",
    "msg.self_request": "The pending friend request is mine!",
    "msg.error": "Pending friend not accepted!",
    "msg.request_accepted": "Pending friend {name} accepted successfully!"
  },
  "command.config.add_friend": {
    "description": "Send a friend request to a user or accept a friend request.",
    "usage.query.name": "Username or ID",
    "usage.query.description": "The user's name or ID to add."
  },
  "command.run.add_friend": {
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.friends_not_found": "Friend {query} not found!",
    "msg.already_friends": "Already a friend!",
    "msg.error": "Cannot add the user!",
    "msg.request_sent": "Friend request sent to {name}"
  },
  "command.config.decline_friend": {
    "description": "Reject or abort a friend request.",
    "usage.query.name": "Pending friend's name or ID",
    "usage.query.description": "The name or ID of the friend pending to reject or abort."
  },
  "command.run.decline_friend": {
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.friends_not_found": "Friend {query} not found!",
    "msg.error": "Pending friend not removed!",
    "msg.request_sent": "Pending friend {name} removed successfully!"
  },
  "command.config.friend_count": {
    "description": "Shows the number of friends of the bot."
  },
  "command.run.friend_count": {
    "msg.info": "I have {friends} friends, {pending} pending ({incoming} incoming, {outgoing} outgoing) and {blocked} blocked!"
  },
  "command.config.invite": {
    "description": "Invites a friend or you to the party.",
    "usage.query.name": "Friend's name or ID",
    "usage.query.description": "The friend's name or ID to invite."
  },
  "command.run.invite": {
    "msg.alone": "On a party with me, the user to invite is required.",
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.friends_not_found": "Friend {query} not found!",
    "msg.already_on_party": "{name} is already in my party!",
    "msg.invite_error": "Cannot send the invitation to {name}!",
    "msg.invite_sent": "Invitation sent to {name}!"
  },
  "command.config.join": {
    "description": "Joins your party or some user's party.",
    "usage.query.name": "Friend's name or ID",
    "usage.query.description": "The friend's name or ID to join."
  },
  "command.run.join": {
    "msg.invalid_param": "You need to be my friend or specify a friend!",
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.friend_not_found": "Friend {query} not found!",
    "msg.already_on_party": "Friend already in my party!",
    "msg.party_error": "{name} does not have a party!",
    "msg.join_request_error": "Cannot send the join request to {name}!",
    "msg.joined": "Joined to {name}!",
    "msg.join_request_sent": "Join request sent to {name}!"
  },
  "command.config.promote": {
    "description": "Promotes a member or makes you leader if you do not specify arguments.",
    "usage.query.name": "Member name or ID",
    "usage.query.description": "The name or ID of the party to ascend."
  },
  "command.run.promote": {
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.member_not_found": "Member {query} not found!",
    "msg.member_not_at_party": "You are not a member of my party.",
    "msg.member_promoted": "Promoted {name}!"
  },
  "command.config.remove_all_friends": {
    "description": "Removes all the friends of the bot."
  },
  "command.run.remove_all_friends": {
    "msg.unauthorized": "This command can only be executed by bot owners!",
    "msg.removing_friends": "Removing all friends!",
    "msg.remove_friends": "Removed {count} friends!"
  },
  "command.config.remove_friend": {
    "description": "Removes a bot's friend.",
    "usage.query.name": "Friend's name or ID",
    "usage.query.description": "The friend's name or ID to remove."
  },
  "command.run.remove_friend": {
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.friend_not_found": "Friend {query} not found!",
    "msg.error": "Cannot remove {name}!",
    "msg.friend_removed": "Friend {name} removed successfully!"
  },
  "command.run.eval": {
    "msg.unauthorized_error": "Only tnfAngel have access to this command."
  },
  "command.config.help": {
    "description": "Shows the help and command panel.",
    "usage.query.name": "Name or ID of the command",
    "usage.query.description": "The name or ID of the command to get detailed help."
  },
  "command.config.message": {
    "description": "Sends a message to the party.",
    "usage.message.name": "Message",
    "usage.message.description": "The message to be sent to the party."
  },
  "command.run.message": {
    "msg.success": "Sent a message to the party"
  },
  "command.config.ping": {
    "description": "Shows the latency of the bot."
  },
  "command.run.ping": {
    "msg.measuring": "Measuring...",
    "msg.info": "Pong! {time}ms"
  },
  "command.config.prev": {
    "description": "Executes the previous command."
  },
  "command.run.prev": {
    "msg.not_found": "A previous command has not been executed!"
  },
  "command.config.send": {
    "description": "Sends a command to a specify bot.",
    "usage.bot.name": "Bot ID",
    "usage.bot.description": "The bot ID to send the command.",
    "usage.command.name": "Command",
    "usage.command.description": "The command to be executed in the bot.",
    "usage.args.name": "Arguments",
    "usage.args.description": "The arguments of the command are required."
  },
  "command.run.send": {
    "msg.sending_command": "Sending command to bot {user}"
  },
  "command.config.send_all": {
    "description": "Sends a command to all bots.",
    "usage.command.name": "Command",
    "usage.command.description": "The command to be executed in the bots.",
    "usage.args.name": "Arguments",
    "usage.args.description": "The arguments of the command are required."
  },
  "command.run.send_all": {
    "msg.sending_command": "Sending command to all bots..."
  },
  "command.config.send_number": {
    "description": "Sends a command to a specify number of bots.",
    "usage.number.name": "Number of bots",
    "usage.number.description": "The number of bots to send the command.",
    "usage.command.name": "Command",
    "usage.command.description": "The command to be executed in the bots.",
    "usage.args.name": "Arguments",
    "usage.args.description": "The arguments of the command are required."
  },
  "command.run.send_number": {
    "msg.count_negative": "The number must be greater than 0!",
    "msg.sending_command": "Sending command to {number} bots..."
  },
  "command.config.send_party": {
    "description": "Sends a command to all the bots that share the same party.",
    "usage.command.name": "Command",
    "usage.command.description": "The command to be executed in the bots.",
    "usage.args.name": "Arguments",
    "usage.args.description": "The arguments of the command are required."
  },
  "command.run.send_party": {
    "msg.sending_command": "Sending command to all bots in my party..."
  },
  "command.config.send_shard": {
    "description": "Sends a command to the bot Shard.",
    "usage.command.name": "Command",
    "usage.command.description": "The command to be executed in the bots.",
    "usage.args.name": "Arguments",
    "usage.args.description": "The arguments of the command are required."
  },
  "command.run.send_shard": {
    "msg.sending_command": "Sending command to all bots in my shard..."
  },
  "command.config.whisper": {
    "description": "Sends a private message to a friend.",
    "usage.query.name": "Friend's name or ID",
    "usage.query.description": "The friend's name or ID to send the private message.",
    "usage.message.name": "Message",
    "usage.message.description": "The message to send to the friend."
  },
  "command.run.whisper": {
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.friend_not_found": "Friend {query} not found!",
    "msg.whisper_sent": "Sent to {name}!"
  },
  "command.config.bp_level": {
    "description": "Sets the battle pass level of the bot.",
    "usage.level.name": "Level",
    "usage.level.description": "The level of the battle pass to be set."
  },
  "command.run.bp_level": {
    "msg.bp_level_set": "Set battle pass level to {level}!"
  },
  "command.config.chat_ban": {
    "description": "Chat bans a party member.",
    "usage.query.name": "Member name or ID",
    "usage.query.description": "The name or ID of the member of the party to ban."
  },
  "command.run.chat_ban": {
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.member_not_found": "Member {query} not found!",
    "msg.success": "Successfully chat-banned {name}"
  },
  "command.config.crowns": {
    "description": "Sets the bot crowns.",
    "usage.crowns.name": "Crowns",
    "usage.crowns.description": "The crowns to set."
  },
  "command.run.crowns": {
    "msg.success": "Set the crowns to {crowns}!"
  },
  "command.config.hide": {
    "description": "Hides a player from the party or hides you if you don't specify arguments.",
    "usage.query.name": "Member name or ID",
    "usage.query.description": "The name or ID of the member of the party to hide."
  },
  "command.run.hide": {
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.member_not_found": "Member {query} not found!",
    "msg.member_not_at_party": "You are not a member of my party.",
    "msg.success": "Hidden {name}!"
  },
  "command.config.hide_all": {
    "description": "Hides all the players in the party."
  },
  "command.run.hide_all": {
    "msg.success": "Hidden all members!"
  },
  "command.config.kick": {
    "description": "Kick's a player from the party.",
    "usage.query.name": "Member name or ID",
    "usage.query.description": "The name or ID of the member of the party to expel."
  },
  "command.run.kick": {
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.member_not_found": "Member {query} not found!",
    "msg.success": "Kicked {name}!"
  },
  "command.config.kick_all": {
    "description": "Kicks all the players in the party."
  },
  "command.run.kick_all": {
    "msg.user_kicked": "Kicked {name}!",
    "msg.success": "Finished kicking all members!"
  },
  "command.config.leave": {
    "description": "The bot leaves the party."
  },
  "command.run.leave": {
    "msg.success": "Bye!"
  },
  "command.config.level": {
    "description": "Sets the bot level.",
    "usage.level.name": "Level",
    "usage.level.description": "The level to be set."
  },
  "command.run.level": {
    "msg.success": "Set level to {level}!"
  },
  "command.config.match": {
    "description": "Sets the state to playing a game.",
    "usage.number.name": "Number of players",
    "usage.number.description": "The number of players in the game."
  },
  "command.run.match": {
    "msg.success": "Set to playing state!"
  },
  "command.config.party_info": {
    "description": "Shows information about the party."
  },
  "command.config.playlist": {
    "description": "Sets the party's playlist.",
    "usage.query.name": "Name or ID of the playlist",
    "usage.query.description": "The name or ID of the playlist to be set."
  },
  "command.run.playlist": {
    "msg.error": "Error setting playlist!",
    "msg.success": "Set the playlist to {query}!"
  },
  "command.config.privacy": {
    "description": "Sets the privacy of the party.",
    "usage.privacy.options.public": "Public",
    "usage.privacy.options.private": "Private",
    "usage.privacy.description": "The privacy of the party to set."
  },
  "command.run.privacy": {
    "msg.success": "Set party privacy to {privacy}!",
    "msg.error": "Invalid privacy, must be public or private!"
  },
  "command.config.rank": {
    "description": "Sets the bot rank.",
    "usage.rank.name": "Rank",
    "usage.rank.description": "The rank to set."
  },
  "command.run.rank": {
    "msg.success": "Set the rank to {rank}!"
  },
  "command.config.ready": {
    "description": "Sets the state to ready."
  },
  "command.run.ready": {
    "msg.warning": "WARNING: If you're trying to init matchmaking, don't use this command! Just hit ready yourself and I'll hit ready automatically.",
    "msg.success": "Ready!"
  },
  "command.config.show": {
    "description": "Shows a hidden player from the party or shows you if you do not specify arguments.",
    "usage.query.name": "Member name or ID",
    "usage.query.description": "The name or ID of the member of the party to show."
  },
  "command.run.show": {
    "msg.multiple_friends_found": "Found multiple friends:",
    "msg.member_not_found": "Member {query} not found!",
    "msg.member_not_at_party": "You are not a member of my party.",
    "msg.success": "Shown {name}!"
  },
  "command.config.show_all": {
    "description": "Shows all the hidden players in the party."
  },
  "command.run.show_all": {
    "msg.success": "Shown all members!"
  },
  "command.config.sit_in": {
    "description": "Sets the state to participating."
  },
  "command.run.sit_in": {
    "msg.success": "Sitting in..."
  },
  "command.config.sit_out": {
    "description": "Sets the state to not participating."
  },
  "command.run.sit_out": {
    "msg.success": "Sitting out..."
  },
  "command.config.unmatch": {
    "description": "Sets the state to not playing a game."
  },
  "command.run.unmatch": {
    "msg.success": "Removed playing state!"
  },
  "command.config.unready": {
    "description": "Sets the state to not ready."
  },
  "command.run.unready": {
    "msg.success": "Not ready!"
  }
}